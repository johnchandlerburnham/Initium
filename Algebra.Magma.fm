
// A Magma is a type with a total binary operation between terms of that type

import Algebra.Operation

// ========================================================
// =                     Definition                       =
// ========================================================

T Magma {A : Type, s : -Setoid(A)}
| magma { f : Op2(A) }

// ========================================================
// =                      Accessors                       =
// ========================================================

magma.f : {A : Type , s : -Setoid(A) , case m : Magma(A,s)} -> Op2(A)
| magma => m.f
